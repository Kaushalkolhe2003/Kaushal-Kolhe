#include<iostream>
using namespace std;
int missing_no(int arr[],int N){
    for(int i=1;i<N;i++){
        bool flag=0;
        for(int j=0;j<N-1;j++){
            if(arr[j]==i){
                flag=1;
                break;
            }
        }
        if(flag==0){
            return i;
        }
    }
    return 0;
}
//Time complexity for this solution will be O(N*M) and space will be just O(1).


int missing_number(int arr[],int N){
   int Sum=(N*(N+1))/2;
   int s=0;
   for(int i=0;i<N;i++){
       s+=arr[i];
   }
   
    return (Sum - s);
}
int main(){
    int arr[5]={1,3,4,5};
    int ans=missing_no(arr,5);
    cout<<"Missing number in array is :"<<ans<<endl;
    int ans2=missing_number(arr,5);
    cout<<"Missing number in array is :"<<ans2<<endl;

}
//Optimal approach to solve this is just make have a sum of 1 to N number by using N(N+1)/2 And then just iterate over the 
 // array and make a varible called s and just make all array sum.............

